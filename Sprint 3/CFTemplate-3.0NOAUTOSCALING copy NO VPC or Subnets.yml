AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template VPC_AutoScaling_With_Public_IPs.template:
  Sample template showing how to create a load balanced, auto scaled group in a
  VPC where the EC2 instances can directly access the internet. **WARNING** This
  template creates Application Load Balancers and Amazon EC2 instances. You will
  be billed for the AWS resources used if you create a stack from this template.
Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Resources:


  ## Security Groups
  


  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Webserver Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: WebServer-Security-Group


  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Bastion-Security-Group

  DBServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private Ingress to allow webserver access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupId: !Ref WebServerSecurityGroup
      Tags:
        -
          Key: Name
          Value: Database-Security-Group

## Database Instances

  MYSQLDBInstanceMain:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !GetAtt DBServerSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: Database-Main
  MYSQLDBInstanceBackup:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !GetAtt DBServerSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: Database-Backup


  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName 
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt WebServerSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: WebServer Initial Instance



  ## Bastion Instance for admin


  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName 
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt BastionSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: Bastion Server Instance


## Storage Buckets for Backups, WebObjects, Codepipeline, Cloudtrail

  s3Bucket1:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: PublicRead
      BucketName: wordpress-webobject-bucket-01
      Tags:
        - Key: Name
          Value: wordpress-webobject-bucket
  s3Bucket2:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: whiteboard-cloudtrail-bucket-02
      Tags:
        - Key: Name
          Value: whiteboard-cloudtrail-bucket
  s3Bucket3:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled 
      BucketName: whiteboard-codepipeline-bucket-03
      Tags:
        - Key: Name
          Value: whiteboard-codepipeline-bucket
  s3Bucket4:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled 
      BucketName: whiteboard-ec2-backup-bucket-0101
      Tags:
        - Key: Name
          Value: whiteboard-backups-bucket
  
